// Generated by CoffeeScript 1.7.1
(function() {
  var Caphe,
    __slice = [].slice;

  Caphe = (function() {
    function Caphe() {}

    Caphe.mixin = function() {
      var consumer, k, provider, providers, v, _i, _len;
      consumer = arguments[0], providers = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      for (_i = 0, _len = providers.length; _i < _len; _i++) {
        provider = providers[_i];
        for (k in provider) {
          v = provider[k];
          if (provider.hasOwnProperty(k)) {
            consumer[k] = v;
          }
        }
      }
      return consumer;
    };

    Caphe.include = function() {
      var modules;
      modules = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      return this.mixin.apply(this, [this.prototype].concat(__slice.call(modules)));
    };

    Caphe.attrAccessor = function() {
      var fields;
      fields = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      return this._createGetterSetter.apply(this, [{
        getter: true,
        setter: true
      }].concat(__slice.call(fields)));
    };

    Caphe.attrReader = function() {
      var fields;
      fields = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      return this._createGetterSetter.apply(this, [{
        getter: true,
        setter: false
      }].concat(__slice.call(fields)));
    };

    Caphe._createGetterSetter = function() {
      var field, fields, option, titleized, _i, _len, _methods;
      option = arguments[0], fields = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      _methods = {};
      for (_i = 0, _len = fields.length; _i < _len; _i++) {
        field = fields[_i];
        titleized = Caphe.prototype.titleize(field);
        if (option.getter) {
          _methods["get" + titleized] = Caphe.prototype._createGetter(field);
        }
        if (option.setter) {
          _methods["set" + titleized] = Caphe.prototype._createSetter(field);
        }
      }
      return this._privateMixin(this.prototype, _methods);
    };

    Caphe._privateMixin = function() {
      var consumer, k, provider, providers, v, _i, _len, _privateProperties;
      consumer = arguments[0], providers = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      for (_i = 0, _len = providers.length; _i < _len; _i++) {
        provider = providers[_i];
        _privateProperties = Object.create(null);
        for (k in provider) {
          v = provider[k];
          if (provider.hasOwnProperty(k)) {
            consumer[k] = v.bind(_privateProperties);
          }
        }
      }
      return consumer;
    };

    Caphe.prototype._createGetter = function(field) {
      return function() {
        return this[field];
      };
    };

    Caphe.prototype._createSetter = function(field) {
      return function(value) {
        return this[field] = value;
      };
    };

    Caphe.prototype.titleize = function(str) {
      return str.charAt(0).toUpperCase() + str.substring(1);
    };

    return Caphe;

  })();

  module.exports = Caphe;

}).call(this);
